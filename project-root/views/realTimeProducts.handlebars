{{!-- Extender el layout principal --}}
{{#extends 'layouts/main'}}
{{#block 'body'}}
<h1>Real Time Product List</h1>
<ul id="productList">
    {{#each products}}
    <li data-id="{{this.id}}">{{this.title}} - {{this.description}} - ${{this.price}}
        <button onclick="deleteProduct({{this.id}})">Delete</button>
    </li>
    {{/each}}
</ul>
<form id="addProductForm">
    <input type="text" name="title" placeholder="Title" required>
    <input type="text" name="description" placeholder="Description" required>
    <input type="text" name="code" placeholder="Code" required>
    <input type="number" name="price" placeholder="Price" required>
    <input type="number" name="stock" placeholder="Stock" required>
    <input type="text" name="category" placeholder="Category" required>
    <button type="submit">Add Product</button>
</form>
<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();

  const productList = document.getElementById('productList');
  const addProductForm = document.getElementById('addProductForm');

  socket.on('initialize', (products) => {
    productList.innerHTML = '';
    products.forEach(product => {
      const li = document.createElement('li');
      li.setAttribute('data-id', product.id);
      li.innerHTML = `${product.title} - ${product.description} - $${product.price} <button onclick="deleteProduct(${product.id})">Delete</button>`;
      productList.appendChild(li);
    });
  });

  socket.on('productAdded', (product) => {
    const li = document.createElement('li');
    li.setAttribute('data-id', product.id);
    li.innerHTML = `${product.title} - ${product.description} - $${product.price} <button onclick="deleteProduct(${product.id})">Delete</button>`;
    productList.appendChild(li);
  });

  socket.on('productDeleted', (product) => {
    const li = document.querySelector(`li[data-id="${product.id}"]`);
    if (li) {
      productList.removeChild(li);
    }
  });

  addProductForm.addEventListener('submit', (e) => {
    e.preventDefault();
    const formData = new FormData(addProductForm);
    const newProduct = {
      title: formData.get('title'),
      description: formData.get('description'),
      code: formData.get('code'),
      price: parseFloat(formData.get('price')),
      stock: parseInt(formData.get('stock')),
      category: formData.get('category')
    };
    socket.emit('createProduct', newProduct);
    addProductForm.reset();
  });

  function deleteProduct(id) {
    socket.emit('deleteProduct', id);
  }
</script>
{{/block}}